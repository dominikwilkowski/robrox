{"version":3,"sources":["helpers.js","AddNewTodoForm.js","Checkbox.js","Textarea.js","TodoItem.js","TodoList.js","serviceWorker.js","index.js","Todo.js"],"names":["saveTodoItemsToLocalStorage","key","data","localStorage","setItem","JSON","stringify","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","AddNewTodoForm","onAddTodo","useState","value","setValue","css","maxWidth","margin","onSubmit","event","preventDefault","display","gridTemplateColumns","name","type","autoComplete","placeholder","onChange","target","appearance","border","padding","fontSize","background","width","borderBottom","borderRadius","color","outline","borderColor","cursor","Checkbox","forwardRef","ref","checked","onClick","position","overflow","verticalAlign","left","top","opacity","height","content","borderWidth","transform","transition","autoSize","field","style","getPx","element","computed","window","getComputedStyle","prop","parseInt","getPropertyValue","getPxFrom","scrollHeight","Textarea","isDone","props","textareaRef","useRef","useEffect","current","listener","addEventListener","removeEventListener","rows","textDecoration","resize","lineHeight","TodoItem","todo","id","onRemoveTodo","onToggleTodoDone","onEditTodo","removeTodoHandler","useCallback","toggleTodoDoneHandler","editTodoHandler","keyCode","blur","checkboxRef","alignItems","click","defaultValue","onKeyDown","role","aria-labelledby","TodoList","todoItems","setCustomError","listStyle","marginTop","Array","isArray","length","map","i","Boolean","location","hostname","match","ReactDOM","render","StrictMode","styles","body","fontFamily","boxSizing","getItem","parsedJSON","parse","error","getTodoItemsFromLocalStorage","setTodoItems","addTodoHandler","newTodoItems","push","filter","todoItem","find","boxShadow","fontWeight","textAlign","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ec91ef46.chunk.js","sourcesContent":["export const getTodoItemsFromLocalStorage = (key) => {\n\tconst value = localStorage.getItem(key);\n\tlet todoItems = null;\n\n\ttry {\n\t\tconst parsedJSON = JSON.parse(value);\n\n\t\tif (Array.isArray(parsedJSON)) {\n\t\t\ttodoItems = parsedJSON;\n\t\t}\n\t} catch (error) {\n\t\ttodoItems = [];\n\t}\n\n\treturn todoItems;\n};\n\nexport const saveTodoItemsToLocalStorage = (key, data) =>\n\tlocalStorage.setItem(key, JSON.stringify(data));\n\nexport function slugify(string) {\n\tconst a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\n\tconst b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\n\tconst p = new RegExp(a.split('').join('|'), 'g');\n\n\treturn string\n\t\t.toString()\n\t\t.toLowerCase()\n\t\t.replace(/\\s+/g, '-') // Replace spaces with -\n\t\t.replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n\t\t.replace(/&/g, '-and-') // Replace & with 'and'\n\t\t.replace(/[^\\w-]+/g, '') // Remove all non-word characters\n\t\t.replace(/--+/g, '-') // Replace multiple - with single -\n\t\t.replace(/^-+/, '') // Trim - from start of text\n\t\t.replace(/-+$/, ''); // Trim - from end of text\n}\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { useState } from 'react';\n\nexport function AddNewTodoForm({ onAddTodo }) {\n\tconst [value, setValue] = useState('');\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tonAddTodo(value);\n\t\tsetValue('');\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tcss={{\n\t\t\t\tmaxWidth: '35rem',\n\t\t\t\tmargin: '0 auto 2rem auto',\n\t\t\t}}\n\t\t>\n\t\t\t<form\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tcss={{\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\tgridTemplateColumns: '1fr',\n\t\t\t\t\tmargin: '0 1rem',\n\n\t\t\t\t\t'@media(min-width: 390px)': {\n\t\t\t\t\t\tgridTemplateColumns: 'auto 5rem',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tname=\"todo\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tplaceholder=\"What needs to be done?\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\t\t\tcss={{\n\t\t\t\t\t\tappearance: 'none',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tpadding: '0.5rem',\n\t\t\t\t\t\tfontSize: '1.5rem',\n\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tborderBottom: '2px solid transparent',\n\t\t\t\t\t\tborderRadius: 0,\n\t\t\t\t\t\tcolor: '#fff',\n\n\t\t\t\t\t\t':focus': {\n\t\t\t\t\t\t\toutline: 'none',\n\t\t\t\t\t\t\tborderColor: '#fff',\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'::placeholder': {\n\t\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.7)',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tcss={{\n\t\t\t\t\t\tdisplay: 'none',\n\t\t\t\t\t\tappearance: 'none',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tpadding: '0.5rem',\n\t\t\t\t\t\tfontSize: '2rem',\n\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\tcursor: 'pointer',\n\n\t\t\t\t\t\t'@media(min-width: 390px)': {\n\t\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAdd\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { forwardRef } from 'react';\n\nexport const Checkbox = forwardRef(({ checked, onChange, onClick }, ref) => {\n\treturn (\n\t\t<label\n\t\t\tcss={{\n\t\t\t\tdisplay: 'inline-block',\n\t\t\t\tposition: 'relative',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpadding: '0.5rem 1.5rem',\n\t\t\t\tverticalAlign: 'middle',\n\t\t\t}}\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tref={ref}\n\t\t\t\tchecked={checked}\n\t\t\t\tonChange={onChange}\n\t\t\t\tcss={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: '-3rem',\n\t\t\t\t\ttop: '-3rem',\n\n\t\t\t\t\t':checked + span:after': {\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<span\n\t\t\t\tcss={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\twidth: '2rem',\n\t\t\t\t\theight: '2rem',\n\t\t\t\t\tbackground: '#fff',\n\n\t\t\t\t\t':after': {\n\t\t\t\t\t\tcontent: '\"\"',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tleft: '0.75rem',\n\t\t\t\t\t\ttop: '0.4rem',\n\t\t\t\t\t\twidth: '0.6rem',\n\t\t\t\t\t\theight: '1rem',\n\t\t\t\t\t\tborder: '#1e3c72 solid',\n\t\t\t\t\t\tborderWidth: '0 4px 5px 0',\n\t\t\t\t\t\ttransform: 'rotate(45deg)',\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\ttransition: 'opacity 0.3s ease',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t</label>\n\t);\n});\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { useEffect, useRef } from 'react';\n\nfunction getPxFrom(element) {\n\tconst computed = window.getComputedStyle(element);\n\treturn (prop) => parseInt(computed.getPropertyValue(prop), 10);\n}\n\nfunction autoSize(field) {\n\tfield.style.height = 'auto';\n\tconst getPx = getPxFrom(field);\n\tconst height = getPx('border-bottom-width') + getPx('border-top-width') + field.scrollHeight;\n\n\tfield.style.height = height + 'px';\n}\n\nexport function Textarea({ isDone, ...props }) {\n\tconst textareaRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tconst field = textareaRef.current;\n\t\tif (field != null) {\n\t\t\tautoSize(field);\n\t\t\tconst listener = () => autoSize(field);\n\t\t\tfield.addEventListener('input', listener);\n\t\t\treturn () => {\n\t\t\t\tfield.removeEventListener('input', listener);\n\t\t\t};\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<textarea\n\t\t\tref={textareaRef}\n\t\t\trows={1}\n\t\t\tcss={{\n\t\t\t\tappearance: 'none',\n\t\t\t\tborder: 'none',\n\t\t\t\tfontSize: '1.5rem',\n\t\t\t\tbackground: 'transparent',\n\t\t\t\twidth: '100%',\n\t\t\t\tcolor: '#fff',\n\t\t\t\ttextDecoration: isDone ? 'line-through' : 'none',\n\t\t\t\tborderBottom: '2px solid transparent',\n\t\t\t\tborderRadius: 0,\n\t\t\t\tresize: 'none',\n\t\t\t\tpadding: '0.2rem 0',\n\t\t\t\theight: 'auto',\n\t\t\t\tlineHeight: 1.4,\n\n\t\t\t\t':focus': {\n\t\t\t\t\toutline: 'none',\n\t\t\t\t\tborderColor: '#fff',\n\t\t\t\t},\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { useCallback, useRef } from 'react';\n\nimport { Checkbox } from './Checkbox';\nimport { Textarea } from './Textarea';\n\nexport function TodoItem({ todo, id, onRemoveTodo, onToggleTodoDone, onEditTodo, isDone }) {\n\tconst removeTodoHandler = useCallback(() => onRemoveTodo(id), [id, onRemoveTodo]);\n\tconst toggleTodoDoneHandler = useCallback(() => onToggleTodoDone(id), [id, onToggleTodoDone]);\n\n\tconst editTodoHandler = useCallback(\n\t\t(event) => {\n\t\t\tif (event.keyCode === 13) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst { value } = event.target;\n\n\t\t\t\tonEditTodo(id, value);\n\t\t\t\tevent.target.blur();\n\t\t\t}\n\t\t},\n\t\t[id, onEditTodo]\n\t);\n\n\tconst checkboxRef = useRef(null);\n\n\treturn (\n\t\t<li\n\t\t\tcss={{\n\t\t\t\tdisplay: 'grid',\n\t\t\t\tgridTemplateColumns: '5rem auto 3rem',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<Checkbox\n\t\t\t\tref={checkboxRef}\n\t\t\t\tchecked={!!isDone}\n\t\t\t\tonChange={toggleTodoDoneHandler}\n\t\t\t\tonClick={() => checkboxRef.current.click()}\n\t\t\t/>\n\t\t\t<Textarea defaultValue={todo} onKeyDown={editTodoHandler} isDone={isDone} />\n\t\t\t<button\n\t\t\t\tonClick={removeTodoHandler}\n\t\t\t\tcss={{\n\t\t\t\t\tappearance: 'none',\n\t\t\t\t\tborder: 'none',\n\t\t\t\t\tpadding: '0.5rem',\n\t\t\t\t\tfontSize: '1.5rem',\n\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span role=\"img\" aria-labelledby=\"trash\" />❌\n\t\t\t</button>\n\t\t</li>\n\t);\n}\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\n\nimport { TodoItem } from './TodoItem';\nimport { slugify } from './helpers';\n\nexport function TodoList({\n\ttodoItems,\n\tonRemoveTodo,\n\tonToggleTodoDone,\n\tonEditTodo,\n\tsetCustomError,\n}) {\n\treturn (\n\t\t<ul\n\t\t\tcss={{\n\t\t\t\tlistStyle: 'none',\n\t\t\t\tpadding: 0,\n\t\t\t\tmargin: '0 auto',\n\t\t\t\tmarginTop: '1rem',\n\n\t\t\t\t'& li:nth-child(odd)': {\n\t\t\t\t\tbackground: 'rgba(230,230,230,0.1)',\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t{todoItems &&\n\t\t\t\tArray.isArray(todoItems) &&\n\t\t\t\ttodoItems.length > 0 &&\n\t\t\t\ttodoItems.map(({ id, todo, isDone }, i) => (\n\t\t\t\t\t<TodoItem\n\t\t\t\t\t\tkey={slugify(`${id}-${todo}`)}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\tonRemoveTodo={onRemoveTodo}\n\t\t\t\t\t\tonToggleTodoDone={onToggleTodoDone}\n\t\t\t\t\t\tonEditTodo={onEditTodo}\n\t\t\t\t\t\tisDone={isDone}\n\t\t\t\t\t\tsetCustomError={setCustomError}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</ul>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","/** @jsx jsx */\n\nimport { jsx, Global } from '@emotion/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Todo } from './Todo';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Global\n\t\t\tstyles={{\n\t\t\t\tbody: {\n\t\t\t\t\tbackground: 'linear-gradient(45deg, rgba(219,219,219,1) 0%, rgba(226,226,226,1) 100%);',\n\t\t\t\t\tfontFamily:\n\t\t\t\t\t\t'system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"',\n\t\t\t\t\tlineHeight: 1.2,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t},\n\n\t\t\t\t'*, *:after, *:before': {\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t\t<Todo />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/** @jsx jsx */\n\nimport { jsx } from '@emotion/core';\nimport { useState, useCallback } from 'react';\n\nimport { getTodoItemsFromLocalStorage, saveTodoItemsToLocalStorage } from './helpers';\nimport { AddNewTodoForm } from './AddNewTodoForm';\nimport { TodoList } from './TodoList';\n\nexport function Todo() {\n\tconst [todoItems, setTodoItems] = useState(getTodoItemsFromLocalStorage('todo') || []);\n\n\tconst addTodoHandler = useCallback(\n\t\t(todo) => {\n\t\t\tconst id = todoItems.length === 0 ? 1 : todoItems[todoItems.length - 1].id + 1;\n\t\t\tconst newTodoItems = [...todoItems];\n\t\t\tnewTodoItems.push({ id, todo });\n\n\t\t\tsetTodoItems(newTodoItems);\n\t\t\tsaveTodoItemsToLocalStorage('todo', newTodoItems);\n\t\t},\n\t\t[todoItems]\n\t);\n\n\tconst removeTodoHandler = useCallback(\n\t\t(id) => {\n\t\t\tconst newTodoItems = todoItems.filter((todoItem) => todoItem.id !== id);\n\n\t\t\tsetTodoItems(newTodoItems);\n\t\t\tsaveTodoItemsToLocalStorage('todo', newTodoItems);\n\t\t},\n\t\t[todoItems]\n\t);\n\n\tconst toggleTodoDoneHandler = useCallback(\n\t\t(id) => {\n\t\t\tconst todo = todoItems.find((todoItem) => todoItem.id === id);\n\t\t\ttodo.isDone = !todo.isDone;\n\n\t\t\tsetTodoItems([...todoItems]);\n\t\t\tsaveTodoItemsToLocalStorage('todo', todoItems);\n\t\t},\n\t\t[todoItems]\n\t);\n\n\tconst editTodoHandler = useCallback(\n\t\t(id, todo) => {\n\t\t\tconst editingTodo = todoItems.find((todoItem) => todoItem.id === id);\n\t\t\teditingTodo.todo = todo;\n\n\t\t\tsetTodoItems([...todoItems]);\n\t\t\tsaveTodoItemsToLocalStorage('todo', todoItems);\n\t\t},\n\t\t[todoItems]\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tcss={{\n\t\t\t\tboxShadow: '0 25px 50px -12px rgba(0,0,0,.5)',\n\t\t\t\tmaxWidth: '37.5rem',\n\t\t\t\tbackground: 'linear-gradient(45deg, #1e3c72 0%, #2a5298 100%);',\n\t\t\t\tmargin: '3rem auto',\n\t\t\t\tpadding: '1rem 0',\n\t\t\t\tcolor: '#fff',\n\n\t\t\t\t'@media(min-width: 390px)': {\n\t\t\t\t\tpadding: '1rem',\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<h1\n\t\t\t\tcss={{\n\t\t\t\t\tfontSize: '2.5rem',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\tmargin: '1rem 1rem 1.5rem 1rem',\n\n\t\t\t\t\t':after': {\n\t\t\t\t\t\tcontent: '\"\"',\n\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\twidth: '80%',\n\t\t\t\t\t\theight: '2px',\n\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\tmargin: '1rem auto',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tRox's To-do List\n\t\t\t</h1>\n\t\t\t<AddNewTodoForm onAddTodo={addTodoHandler} />\n\n\t\t\t<TodoList\n\t\t\t\ttodoItems={todoItems}\n\t\t\t\tonRemoveTodo={removeTodoHandler}\n\t\t\t\tonToggleTodoDone={toggleTodoDoneHandler}\n\t\t\t\tonEditTodo={editTodoHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n"],"sourceRoot":""}